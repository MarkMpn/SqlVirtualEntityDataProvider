//<autogenerated />
// 
// This source code was auto-generated by xsd, Version=4.6.1055.0.
// 
namespace MikeFactorial.Xrm.Plugins.DataProviders
{
    using System.IO;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class condition {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("value")]
        public conditionValue[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string column;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string attribute;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string entityname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public @operator @operator;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public AggregateType aggregate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aggregateSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public RowAggregateType rowaggregate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool rowaggregateSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string alias;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uiname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uitype;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public TrueFalse01Type uihidden;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool uihiddenSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class conditionValue {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uiname;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string uitype;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FieldXmlFieldUIType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="positiveInteger")]
        public string languagecode;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SerializedTrueFalse01Type {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public TrueFalse01Type Value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    public enum TrueFalse01Type {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SerializedInteger {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string formattedvalue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute(DataType="nonNegativeInteger")]
        public string Value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchLinkEntityType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("all-attributes", typeof(allattributes))]
        [System.Xml.Serialization.XmlElementAttribute("attribute", typeof(FetchAttributeType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter))]
        [System.Xml.Serialization.XmlElementAttribute("link-entity", typeof(FetchLinkEntityType))]
        [System.Xml.Serialization.XmlElementAttribute("order", typeof(FetchOrderType))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string to;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string from;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string alias;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("link-type")]
        public string linktype;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool visible;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool visibleSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool intersect;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool intersectSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool enableprefiltering;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableprefilteringSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string prefilterparametername;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute("all-attributes", Namespace="", IsNullable=false)]
    public partial class allattributes {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchAttributeType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public build build;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool buildSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string addedby;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string alias;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public AggregateType aggregate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aggregateSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FetchBoolType groupby;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool groupbySpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public DateGroupingType dategrouping;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dategroupingSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FetchBoolType usertimezone;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool usertimezoneSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FetchBoolType distinct;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool distinctSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    public enum build {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1.504021")]
        Item1504021,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1.003017")]
        Item1003017,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    public enum AggregateType {
        
        /// <remarks/>
        count,
        
        /// <remarks/>
        countcolumn,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        avg,
        
        /// <remarks/>
        min,
        
        /// <remarks/>
        max,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    public enum FetchBoolType {
        
        /// <remarks/>
        @true,
        
        /// <remarks/>
        @false,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    public enum DateGroupingType {
        
        /// <remarks/>
        day,
        
        /// <remarks/>
        week,
        
        /// <remarks/>
        month,
        
        /// <remarks/>
        quarter,
        
        /// <remarks/>
        year,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fiscal-period")]
        fiscalperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("fiscal-year")]
        fiscalyear,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class filter {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("condition", typeof(condition))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(filterType.and)]
        public filterType type;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool isquickfindfields;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isquickfindfieldsSpecified;

        /// <summary>
        /// Initializes a new instance of the <see cref="filter"/> class.
        /// </summary>
        public filter() {
            this.type = filterType.and;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum filterType {
        
        /// <remarks/>
        and,
        
        /// <remarks/>
        or,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchOrderType {
        
        /// <remarks/>
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string attribute;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string alias;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool descending;

        /// <summary>
        /// Initializes a new instance of the <see cref="FetchOrderType"/> class.
        /// </summary>
        public FetchOrderType() {
            this.descending = false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchEntityType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("all-attributes", typeof(allattributes))]
        [System.Xml.Serialization.XmlElementAttribute("attribute", typeof(FetchAttributeType))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(filter))]
        [System.Xml.Serialization.XmlElementAttribute("link-entity", typeof(FetchLinkEntityType))]
        [System.Xml.Serialization.XmlElementAttribute("order", typeof(FetchOrderType))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool enableprefiltering;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool enableprefilteringSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string prefilterparametername;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    public enum @operator {
        
        /// <remarks/>
        eq,
        
        /// <remarks/>
        neq,
        
        /// <remarks/>
        ne,
        
        /// <remarks/>
        gt,
        
        /// <remarks/>
        ge,
        
        /// <remarks/>
        le,
        
        /// <remarks/>
        lt,
        
        /// <remarks/>
        like,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-like")]
        notlike,
        
        /// <remarks/>
        @in,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-in")]
        notin,
        
        /// <remarks/>
        between,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-between")]
        notbetween,
        
        /// <remarks/>
        @null,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-null")]
        notnull,
        
        /// <remarks/>
        yesterday,
        
        /// <remarks/>
        today,
        
        /// <remarks/>
        tomorrow,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-seven-days")]
        lastsevendays,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-seven-days")]
        nextsevendays,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-week")]
        lastweek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("this-week")]
        thisweek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-week")]
        nextweek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-month")]
        lastmonth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("this-month")]
        thismonth,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-month")]
        nextmonth,
        
        /// <remarks/>
        on,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("on-or-before")]
        onorbefore,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("on-or-after")]
        onorafter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-year")]
        lastyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("this-year")]
        thisyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-year")]
        nextyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-hours")]
        lastxhours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-hours")]
        nextxhours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-days")]
        lastxdays,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-days")]
        nextxdays,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-weeks")]
        lastxweeks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-weeks")]
        nextxweeks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-months")]
        lastxmonths,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-months")]
        nextxmonths,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-months")]
        olderthanxmonths,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-years")]
        olderthanxyears,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-weeks")]
        olderthanxweeks,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-days")]
        olderthanxdays,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-hours")]
        olderthanxhours,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("olderthan-x-minutes")]
        olderthanxminutes,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-years")]
        lastxyears,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-years")]
        nextxyears,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-userid")]
        equserid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ne-userid")]
        neuserid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-userteams")]
        equserteams,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-useroruserteams")]
        equseroruserteams,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-useroruserhierarchy")]
        equseroruserhierarchy,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-useroruserhierarchyandteams")]
        equseroruserhierarchyandteams,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-businessid")]
        eqbusinessid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ne-businessid")]
        nebusinessid,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-userlanguage")]
        equserlanguage,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("this-fiscal-year")]
        thisfiscalyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("this-fiscal-period")]
        thisfiscalperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-fiscal-year")]
        nextfiscalyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-fiscal-period")]
        nextfiscalperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-fiscal-year")]
        lastfiscalyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-fiscal-period")]
        lastfiscalperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-fiscal-years")]
        lastxfiscalyears,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("last-x-fiscal-periods")]
        lastxfiscalperiods,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-fiscal-years")]
        nextxfiscalyears,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("next-x-fiscal-periods")]
        nextxfiscalperiods,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-fiscal-year")]
        infiscalyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-fiscal-period")]
        infiscalperiod,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-fiscal-period-and-year")]
        infiscalperiodandyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-or-before-fiscal-period-and-year")]
        inorbeforefiscalperiodandyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("in-or-after-fiscal-period-and-year")]
        inorafterfiscalperiodandyear,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("begins-with")]
        beginswith,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-begin-with")]
        notbeginwith,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ends-with")]
        endswith,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-end-with")]
        notendwith,
        
        /// <remarks/>
        under,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-or-under")]
        eqorunder,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-under")]
        notunder,
        
        /// <remarks/>
        above,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("eq-or-above")]
        eqorabove,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("contain-values")]
        containvalues,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("not-contain-values")]
        notcontainvalues,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    public enum RowAggregateType {
        
        /// <remarks/>
        countchildren,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("fetch", Namespace="", IsNullable=false)]
    public partial class FetchType {


        /// <summary>
        /// Deserializes the fetch XML.
        /// </summary>
        /// <param name="fetchXml">The fetch XML.</param>
        /// <returns>Fetch Object for the FetchXML string</returns>
        public static FetchType Deserialize(string fetchXml)
        {
            var serializer = new XmlSerializer(typeof(FetchType));
            object result;
            using (TextReader reader = new StringReader(fetchXml))
            {
                result = serializer.Deserialize(reader);
            }

            return result as FetchType;
        }
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("entity", typeof(FetchEntityType))]
        [System.Xml.Serialization.XmlElementAttribute("order", typeof(FetchOrderType))]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string count;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string page;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("paging-cookie")]
        public string pagingcookie;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("utc-offset")]
        public string utcoffset;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool aggregate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool aggregateSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool distinct;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool distinctSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string top;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public FetchTypeMapping mapping;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool mappingSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("min-active-row-version")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool minactiverowversion;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("output-format")]
        public FetchTypeOutputformat outputformat;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool outputformatSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool returntotalrecordcount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("no-lock")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool nolock;

        /// <summary>
        /// Initializes a new instance of the <see cref="FetchType"/> class.
        /// </summary>
        public FetchType() {
            this.minactiverowversion = false;
            this.returntotalrecordcount = false;
            this.nolock = false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FetchTypeMapping {
        
        /// <remarks/>
        @internal,
        
        /// <remarks/>
        logical,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public enum FetchTypeOutputformat {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml-ado")]
        xmlado,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml-auto")]
        xmlauto,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml-elements")]
        xmlelements,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml-raw")]
        xmlraw,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("xml-platform")]
        xmlplatform,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class savedquery {
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string savedqueryid;
        
        /// <remarks/>
        public SerializedInteger returnedtypecode;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public SerializedInteger querytype;
        
        /// <remarks/>
        public SerializedTrueFalse01Type IsCustomizable;
        
        /// <remarks/>
        public SerializedTrueFalse01Type CanBeDeleted;
        
        /// <remarks/>
        public string IntroducedVersion;
        
        /// <remarks/>
        public SerializedTrueFalse01Type isquickfindquery;
        
        /// <remarks/>
        public SerializedTrueFalse01Type isuserdefined;
        
        /// <remarks/>
        public SerializedTrueFalse01Type isdefault;
        
        /// <remarks/>
        public bool isprivate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isprivateSpecified;
        
        /// <remarks/>
        public string queryapi;
        
        /// <remarks/>
        public savedqueryFetchxml fetchxml;
        
        /// <remarks/>
        public savedqueryColumnsetxml columnsetxml;
        
        /// <remarks/>
        public savedqueryLayoutxml layoutxml;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string donotuseinLCID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string useinLCID;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class savedqueryFetchxml {
        
        /// <remarks/>
        public FetchType fetch;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class savedqueryColumnsetxml {
        
        /// <remarks/>
        public savedqueryColumnsetxmlColumnset columnset;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class savedqueryColumnsetxmlColumnset {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ascend", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("column", typeof(savedqueryColumnsetxmlColumnsetColumn))]
        [System.Xml.Serialization.XmlElementAttribute("descend", typeof(object))]
        [System.Xml.Serialization.XmlElementAttribute("filter", typeof(savedqueryColumnsetxmlColumnsetFilter))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemsElementName")]
        public object[] Items;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ItemsElementName")]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemsChoiceType[] ItemsElementName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string version;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool distinct;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool distinctSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class savedqueryColumnsetxmlColumnsetColumn {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public build build;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool buildSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string addedby;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class savedqueryColumnsetxmlColumnsetFilter {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("condition")]
        public savedqueryColumnsetxmlColumnsetFilterCondition[] condition;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string column;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public @operator @operator;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operatorSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class savedqueryColumnsetxmlColumnsetFilterCondition {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string column;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public @operator @operator;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operatorSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(IncludeInSchema=false)]
    public enum ItemsChoiceType {
        
        /// <remarks/>
        ascend,
        
        /// <remarks/>
        column,
        
        /// <remarks/>
        descend,
        
        /// <remarks/>
        filter,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class savedqueryLayoutxml {
        
        /// <remarks/>
        public savedqueryLayoutxmlGrid grid;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class savedqueryLayoutxmlGrid {
        
        /// <remarks/>
        public savedqueryLayoutxmlGridRow row;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool select;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string preview;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string icon;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string jump;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string @object;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string disableInlineEditing;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string iconrenderer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string multilinerows;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class savedqueryLayoutxmlGridRow {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("cell")]
        public savedqueryLayoutxmlGridRowCell[] cell;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string id;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string multiobjectidfield;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string layoutstyle;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class savedqueryLayoutxmlGridRowCell {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string width;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LabelId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string label;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string desc;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string ishidden;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string disableSorting;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(DataType="integer")]
        public string disableMetaDataBinding;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string cellType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string imageproviderwebresource;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string imageproviderfunctionname;
    }
}
